"""update post_excurtion table, remake DB 5.0 try 2

Revision ID: 962ddd42f20f
Revises: 8c76f65c1466
Create Date: 2025-04-28 21:35:12.579295

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "962ddd42f20f"
down_revision: Union[str, None] = "8c76f65c1466"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "products",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("username", sa.String(length=32), nullable=False),
        sa.Column("role", sa.String(length=6), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "user_guides",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("first_name", sa.String(length=32), nullable=False),
        sa.Column("last_name", sa.String(length=32), nullable=False),
        sa.Column("avatar", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "post_excurtions",
        sa.Column("city", sa.String(length=30), nullable=False),
        sa.Column("title", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), server_default="", nullable=False),
        sa.Column("has_children", sa.Boolean(), server_default="false", nullable=False),
        sa.Column("persons_count", sa.Integer(), server_default="1", nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column(
            "status", sa.String(length=20), server_default="change", nullable=False
        ),
        sa.Column("user_guide_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.CheckConstraint(
            "status IN ('approved', 'disapproved', 'change')", name="check_status_values"
        ),
        sa.ForeignKeyConstraint(
            ["user_guide_id"],
            ["user_guides.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "books",
        sa.Column("date_book", sa.DateTime(), nullable=False),
        sa.Column("excursion_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.CheckConstraint("date_book >= datetime('now')", name="date_not_in_past"),
        sa.ForeignKeyConstraint(
            ["excursion_id"],
            ["post_excurtions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "excursion_photos",
        sa.Column("file_path", sa.String(length=255), nullable=False),
        sa.Column("photo_number", sa.Integer(), nullable=False),
        sa.Column("excursion_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["excursion_id"],
            ["post_excurtions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("excursion_photos")
    op.drop_table("books")
    op.drop_table("post_excurtions")
    op.drop_table("user_guides")
    op.drop_table("users")
    op.drop_table("products")
    # ### end Alembic commands ###
